spring:
  application:
    name: sysgateway
  cloud:
    gateway:
      # 网关解决跨域问题
      globalcors:
        cors-configurations:
          '[/**]': # 匹配所有请求
            allowedOrigins: "*" #跨域处理 允许所有的域
            allowedMethods: # 支持的方法
              - GET
              - POST
              - PUT
              - DELETE
      routes:
        - id: goods
          # lb:动态路由协议   如果访问的路径中包含goods 就会去注册中心访问goods服务
          uri: lb://goods
          # 具体访问的路径信息，访问的路径前面要加上goods
          predicates:
            - Path=/goods/**
          filters:
            # 忽略访问路径的斜线后面的第一个值
            - StripPrefix= 1
            - name: RequestRateLimiter #请求数限流 名字不能随便写
              args: #spring cloud gateway 默认使用redis的RateLimter限流算法来实现
                key-resolver: "#{@ipKeyResolver}"   # 用于限流的键的解析器的 Bean对象的名字。它使用 SpEL表达式根据#{@beanName}从 Spring 容器中获取 Bean 对象
                redis-rate-limiter.replenishRate: 1 #令牌桶每秒填充平均速率（网关限流）
                redis-rate-limiter.burstCapacity: 1 #令牌桶总容量（网关限流）
        - id: system
          uri: lb://system
          predicates:
            - Path=/system/**
          filters:
            - StripPrefix= 1
  redis:
    host: 192.168.200.128
server:
  port: 9101
eureka:
  client:
    service-url:
      defaultZone: http://127.0.0.1:6868/eureka
  instance:
    prefer-ip-address: true